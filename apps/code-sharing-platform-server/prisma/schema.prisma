datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt         DateTime                   @default(now())
  email             String?                    @unique
  firstName         String?
  id                String                     @id @default(cuid())
  lastName          String?
  name              String?
  password          String
  profileVisibility EnumUserProfileVisibility?
  profiles          Profile[]
  roles             Json
  surname           String?
  updatedAt         DateTime                   @updatedAt
  username          String                     @unique
}

model CodeSnippet {
  codeContent         String?
  codeName            String?
  comments            Comment[]
  createdAt           DateTime                         @default(now())
  description         String?
  feedbacks           Feedback[]
  id                  String                           @id @default(cuid())
  owner               String?
  programmingLanguage String?
  updatedAt           DateTime                         @updatedAt
  visibilityStatus    EnumCodeSnippetVisibilityStatus?
}

model Comment {
  author        String?
  codeSnippet   CodeSnippet? @relation(fields: [codeSnippetId], references: [id])
  codeSnippetId String?
  content       String?
  createdAt     DateTime     @default(now())
  id            String       @id @default(cuid())
  updatedAt     DateTime     @updatedAt
}

model Feedback {
  author        String?
  codeSnippet   CodeSnippet? @relation(fields: [codeSnippetId], references: [id])
  codeSnippetId String?
  comment       String?
  createdAt     DateTime     @default(now())
  id            String       @id @default(cuid())
  rating        Int?
  updatedAt     DateTime     @updatedAt
}

model Follow {
  createdAt DateTime @default(now())
  follower  String?
  following String?
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Profile {
  bio            String?
  createdAt      DateTime @default(now())
  id             String   @id @default(cuid())
  profilePicture Json?
  updatedAt      DateTime @updatedAt
  user           User?    @relation(fields: [userId], references: [id])
  userId         String?
}

enum EnumUserProfileVisibility {
  Option1
}

enum EnumCodeSnippetVisibilityStatus {
  Option1
}
